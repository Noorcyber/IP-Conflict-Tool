#!/bin/bash

# Function to display the design "Datto Netrunners"
display_datto_netrunners() {
    cat << "EOF"


██╗██████╗ ██████╗ ███████╗ ██████╗ ██████╗ ███╗   ██╗
██║██╔══██╗██╔══██╗██╔════╝██╔════╝██╔═══██╗████╗  ██║
██║██████╔╝██████╔╝█████╗  ██║     ██║   ██║██╔██╗ ██║
██║██╔═══╝ ██╔══██╗██╔══╝  ██║     ██║   ██║██║╚██╗██║
██║██║     ██║  ██║███████╗╚██████╗╚██████╔╝██║ ╚████║
╚═╝╚═╝     ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝
                                                      
                                                                          
                                                                                                                                                                                                                
  By Noor Shaheed, Datto, Kaseya. 05/27/2024 Ip Conflict tool V.01
EOF
}

echo "Fetching ARP table..."
/sbin/arp -a

echo "Analyzing ARP table for IP conflicts..."

# Capture the ARP table output
arp_output=$(/sbin/arp -a)

# Debug: Print the ARP table output
echo "ARP table output:"
echo "$arp_output"

# Extract IP addresses and look for duplicates
conflicts=$(echo "$arp_output" | /usr/bin/awk '{print $2}' | tr -d '()' | sort | uniq -d)

# Debug: Print the list of potential conflict IPs
echo "Potential conflict IPs:"
echo "$conflicts"

if [ -n "$conflicts" ]; then
    echo "IP conflicts detected:"
    echo "$conflicts"
else
    echo "No IP conflicts detected."
fi


